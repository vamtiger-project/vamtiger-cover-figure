{"version":3,"file":"vamtiger-cover-figure.js","sources":["../node_modules/vamtiger-browser-method/source/types.ts","../node_modules/vamtiger-browser-method/source/define-custom-element.ts","../node_modules/vamtiger-browser-method/source/load-script.ts","../source/types.ts","../source/config.ts","../source/css/document-index.ts","../source/get-template.ts","../source/html/index.ts","../source/handle-loaded-image.ts","../source/load-image.ts","../source/load-image-caption.ts","../source/element.ts","../source/vamtiger-cover-figure.ts"],"sourcesContent":["import * as tslib from '../node_modules/tslib/tslib';\nimport defineCustomElement from './define-custom-element';\n\nexport enum ScriptType {\n    jsonld = 'application/ld+json'\n}\n\nexport enum ScriptAttribute {\n    type = 'type'\n}\n\nexport enum ErrorMessage {\n    failedToLoadScript = 'Failed to load script',\n    windowPropertyNotSet = 'Window property not set',\n    unsupportedFeature = 'Unsupported feature',\n    customElementAreadyDefined = 'Custom element already defined',\n    noElementName = 'No Element Name',\n    noTemplateUrl = 'No Template URL',\n    noElementSelector = 'No Template Selector',\n    noTemplateForUrl = 'No Template for URL',\n    noTemplate = 'No Template',\n    noElementForSelector = 'No Element for Selector'\n}\n\nexport enum StringConstant {\n    slash = '/'\n}\n\nexport enum TagName {\n    div = 'div'\n}\n\nexport enum LinkRel {\n    stylesheet = 'stylesheet'\n}\n\nexport enum LoadScriptElement {\n    script = 'script',\n    link = 'link',\n    style = 'style'\n}\n\nexport enum Selector {\n    lastStylesheet = 'style:last-of-type',\n    webcomponentsjs = 'script[src*=\"@webcomponents\\/webcomponentsjs\"]'\n}\n\nexport interface ILoadRemoteScriptParams {\n    src: string;\n}\n\nexport interface ILoadRemoteStylesheetScriptParams {\n    href: string;\n}\n\nexport interface ILoadLocalScriptParams {\n    name: string;\n}\n\nexport interface ILoadScriptParams {\n    js: string;\n    jsonld?: boolean;\n}\n\nexport interface ILoadStylesheetScriptParams {\n    css: string;\n}\n\nexport interface ILoadScript {\n    params: LocalScriptParams\n        | LocalStylesheetScriptParams\n        | ILoadRemoteScriptParams\n        | ILoadRemoteStylesheetScriptParams;\n    reject: (error: Error) => void\n}\n\nexport interface ILoadShadowStylesheet {\n    css: string;\n    element: HTMLElement;\n}\n\nexport interface IDefineCustomElement {\n    name: string;\n    constructor: {\n        new (): HTMLElement\n        prototype: HTMLElement;\n    };\n    ignore?: boolean;\n}\n\nexport interface IPause {\n    milliseconds: number;\n}\n\nexport interface IGetElementBase {\n    name: string;\n}\n\nexport interface IGetElementTemplate extends IGetElementBase {\n    template: string;\n}\n\nexport interface IGetElementUrl extends IGetElementBase {\n    url: string;\n    selector:  string;\n}\n\nexport type TsLibType = typeof tslib;\n\nexport type TsLibKey = keyof TsLibType;\n\nexport type TsLib = {\n    [K in TsLibKey]: TsLibType[K]\n}\n\nexport type LocalScriptParams = ILoadLocalScriptParams & ILoadScriptParams;\n\nexport type LocalStylesheetScriptParams = ILoadLocalScriptParams & ILoadStylesheetScriptParams;\n\nexport type LoadScriptParams = LocalScriptParams\n    | LocalStylesheetScriptParams\n    | ILoadRemoteScriptParams\n    | ILoadRemoteStylesheetScriptParams;\n\nexport type LoadScriptsParams = LoadScriptParams[];\n\nexport type LoadScriptsSequentiallyParams = LoadScriptsParams[];\n\nexport type LoadedScript<P extends ILoadScript['params']> =\n    P extends ILoadScriptParams ? HTMLScriptElement :\n    P extends ILoadStylesheetScriptParams ? HTMLStyleElement :\n    P extends ILoadRemoteScriptParams ? HTMLScriptElement :\n    P extends ILoadRemoteStylesheetScriptParams ? HTMLLinkElement :\n    never;\n\nexport type LoadedScripts<P extends LoadScriptsParams> =\n    P extends ILoadScriptParams[] ? HTMLScriptElement[] :\n    P extends ILoadStylesheetScriptParams[] ? HTMLStyleElement[] :\n    P extends ILoadRemoteScriptParams[] ? HTMLScriptElement[] :\n    P extends ILoadRemoteStylesheetScriptParams[] ? HTMLLinkElement[] :\n    never;\n\nexport type LoadedScriptsSequentially<P extends LoadScriptsSequentiallyParams> =\n    P extends ILoadScriptParams[][] ? HTMLScriptElement[] :\n    P extends ILoadStylesheetScriptParams[][] ? HTMLStyleElement[] :\n    P extends ILoadRemoteScriptParams[][] ? HTMLScriptElement[] :\n    P extends ILoadRemoteStylesheetScriptParams[][] ? HTMLLinkElement[] :\n    never;\n\nexport type GetElementParams = IGetElementTemplate | IGetElementUrl;\n\ndeclare global {\n    interface Window extends TsLib {\n        VamtigerBrowserMethod: {\n            loadScript: <P extends ILoadScript['params']>(params: P) => Promise<LoadedScript<P>>;\n            loadScripts: <P extends LoadScriptsParams>(params: P) => Promise<LoadedScripts<P>>;\n            loadScriptsSequentially: <P extends LoadScriptsSequentiallyParams>(params: P) => Promise<LoadedScriptsSequentially<P>>;\n            loadShadowStylesheet: (params: ILoadShadowStylesheet) => void;\n            defineCustomElement: (params: IDefineCustomElement) => void;\n            getElement: (params: GetElementParams) => Promise<HTMLElement>;\n            pause: (params: IPause) => Promise<{}>;\n        }\n    }\n\n    namespace NodeJS {\n        interface  Global {\n            VamtigerBrowserMethod: Window['VamtigerBrowserMethod'];\n        }\n    }\n}","import { IDefineCustomElement, ErrorMessage } from './types';\n\nconst { unsupportedFeature, customElementAreadyDefined } = ErrorMessage;\n\nexport default function defineCustomElement({ name, constructor, ignore }: IDefineCustomElement) {\n    const { customElements } = window;\n    const define = customElements && customElements.define;\n    const existingElement = define && customElements.get && customElements.get(name);\n\n    if (define && !existingElement) {\n        customElements.define(name, constructor);\n    } else if (existingElement) {\n        throw new Error(`${customElementAreadyDefined}: ${name}`);\n    } else if (!ignore) {\n        defineCustomElement({ name, constructor, ignore: true });\n    } else {\n        throw new Error(`${unsupportedFeature}: Custom Elements - ${name}`);\n    }\n}","import {\n    ILoadScript,\n    ErrorMessage,\n    LocalScriptParams,\n    LocalStylesheetScriptParams,\n    ILoadRemoteStylesheetScriptParams,\n    ILoadRemoteScriptParams,\n    LoadScriptElement,\n    LoadedScript,\n    LinkRel,\n    ScriptAttribute,\n    ScriptType\n} from './types';\n\nconst { failedToLoadScript } = ErrorMessage;\nconst { stylesheet } = LinkRel;\nconst { script: scriptElement, link, style } = LoadScriptElement;\n\nexport default <P extends ILoadScript['params']>(params: P) => new Promise((resolve: (script: LoadedScript<P>) => void, reject: ILoadScript['reject']) => {\n    const { head, body } = document;\n    const { js, name: scriptName, jsonld } = params as LocalScriptParams;\n    const { src } = params as ILoadRemoteScriptParams;\n    const { css, name: stylesheetName } = params as LocalStylesheetScriptParams;\n    const { href } = params as ILoadRemoteStylesheetScriptParams;\n    const remoteScript = params.hasOwnProperty('src') || params.hasOwnProperty('href');\n    const element = (js || src) && scriptElement\n        || css && style\n        || href && link;\n    const selector = src && `script[src=\"${src}\"]`\n        || href && `link[href=\"${href}\"]`\n        || js && scriptName && `script[data-name=\"${scriptName}\"]`\n        || css && stylesheetName && `style[data-name=\"${stylesheetName}\"]`;\n    const existingScript = (head.querySelector(selector) || body.querySelector(selector)) as LoadedScript<P>;\n    const script = selector\n        && element\n        && document.createElement(element) as LoadedScript<P>;\n\n    if (script instanceof HTMLScriptElement) {\n        if (src) {\n            script.src = src;\n        } else if (js) {\n            script.innerHTML = js;\n            script.dataset.name = scriptName;\n\n            if (jsonld) {\n                script.setAttribute(ScriptAttribute.type, ScriptType.jsonld);\n            }\n        }\n    } else if (script instanceof HTMLLinkElement) {\n        script.rel = stylesheet;\n        script.href = href;\n    } else if (script instanceof HTMLStyleElement) {\n        script.innerHTML = css;\n        script.dataset.name = stylesheetName;\n    }\n\n    if (existingScript) {\n        resolve(existingScript);\n    } else if (script) {\n        head.appendChild(script);\n\n        if (remoteScript) {\n            script.addEventListener('load', handleLoad);\n            script.addEventListener('error', handleLoadError);\n        } else {\n            resolve(script);\n        }\n    }\n\n    function handleLoad(event: Event) {\n        if (script) {\n            script.removeEventListener('load', handleLoad);\n\n            resolve(script);\n        }\n    }\n\n    function handleLoadError(event: Event) {\n        if (script) {\n            script.removeEventListener('error', handleLoadError);\n        }\n\n        console.error(event);\n\n        reject(new Error(`${failedToLoadScript}`));\n    }\n});","import VamtigerCoverFigure from './element';\n\nexport enum StringConstant {\n    nothing = ''\n}\n\nexport enum DataAttribute {\n    captionImage = 'captionImage',\n    imageCaptionIcon = 'imageCaptionIcon',\n    imageCaptionTitle = 'imageCaptionTitle',\n    imageCaptionSubtitle = 'imageCaptionSubtitle'\n}\n\nexport enum Selector {\n    style = 'style',\n    slot = 'slot',\n    image = 'img',\n    overlay = 'div',\n    figure = 'figure',\n    imageCaption = '[data-image-caption]',\n    icon = '[data-icon]',\n    title = '[data-title]',\n    subtitle = '[data-subtitle]',\n    centerCaption = '[data-center-caption]'\n}\n\nexport enum DataAttribute {\n    image = 'image',\n    description = 'description',\n    loaded = 'loaded',\n    overlay = 'overlay'\n}\n\nexport enum SlotName {\n    darkOverlay = 'dark-overlay',\n    template = 'template',\n    caption = 'caption',\n    centerCaption = 'center-caption'\n}\n\nexport enum EventName {\n    imageLoaded = 'imageLoaded'\n}\n\nexport enum ObservedAttributes {\n\n}\n\nexport interface IGetTemplate {\n    selector: Selector;\n    attributes?: IAttributes;\n    properties?: IProperties;\n}\n\nexport interface IAttributes {\n    id?: string;\n    for?: string;\n    slot?: string;\n    'data-image-figure'?: string;\n}\n\nexport interface IProperties {\n    name?: string;\n    src?: string;\n    alt?: string;\n    innerHTML?: string;\n}\n\nexport interface ILoadImage {\n    element: VamtigerCoverFigure;\n}\n\nexport interface ILoadImageCaption {\n    element: VamtigerCoverFigure;\n}\n\nexport interface IDataset extends DOMStringMap {\n    image: string;\n    description?: string;\n    loaded?: '';\n    overlay?: SlotName;\n    imageCaptionIcon?: string;\n    imageCaptionTitle?: string;\n    imageCaptionSubtitle?: string;\n    centerCaption?: string;\n}\n\nexport interface IHandleLoadedImage {\n    element?: HTMLElement;\n}\n\nexport type AttributesKey = keyof IAttributes;\n\nexport type ObservedAttribute = keyof typeof ObservedAttributes;\n\nexport type GetTemplate<P extends IGetTemplate> =\n    P['selector'] extends Selector.style ? HTMLStyleElement :\n    P['selector'] extends Selector.slot ? HTMLSlotElement :\n    P['selector'] extends Selector.image ? HTMLImageElement :\n    P['selector'] extends Selector.overlay ? HTMLDivElement :\n    P['selector'] extends Selector.figure\n        | Selector.imageCaption\n        | Selector.centerCaption ? HTMLElement :\n    null;\n\nexport const imageCaptionAttribute = [\n    DataAttribute.imageCaptionIcon,\n    DataAttribute.imageCaptionTitle,\n    DataAttribute.imageCaptionSubtitle\n];","import {\n    ObservedAttributes,\n    ObservedAttribute\n} from './types'\n\nexport const shadowRoot = {\n    mode: 'open'\n} as ShadowRootInit;\n\nexport const observedAttributes = Object.keys(ObservedAttributes) as ObservedAttribute[];","export default `vamtiger-cover-figure,vamtiger-cover-figure figcaption,vamtiger-cover-figure figure,vamtiger-cover-figure h5,vamtiger-cover-figure header{margin:0;padding:0}vamtiger-cover-figure [data-overlay],vamtiger-cover-figure [slot=caption],vamtiger-cover-figure [slot=caption] [data-icon-figure],vamtiger-cover-figure [slot=vamtiger-cover-figure]{position:relative}vamtiger-cover-figure[data-center-caption-uppercase][data-center-caption-hashtag] [slot=center-caption] [data-caption-text]:before,vamtiger-cover-figure [slot=center-caption] [data-caption-text],vamtiger-cover-figure figcaption,vamtiger-cover-figure figure{display:inline-block}vamtiger-cover-figure,vamtiger-cover-figure [slot=caption][data-caption-image]{-webkit-animation:b 0ms linear forwards;animation:b 0ms linear forwards}vamtiger-cover-figure[data-loaded],vamtiger-cover-figure [slot=caption][data-caption-image][data-loaded]{-webkit-animation:a 275ms linear forwards;animation:a 275ms linear forwards}vamtiger-cover-figure [data-overlay],vamtiger-cover-figure [slot=center-caption],vamtiger-cover-figure [slot=template],vamtiger-cover-figure [slot=vamtiger-cover-figure]{grid-column:1;grid-row:1}vamtiger-cover-figure [data-overlay],vamtiger-cover-figure [slot=template],vamtiger-cover-figure [slot=vamtiger-cover-figure],vamtiger-cover-figure [slot=vamtiger-cover-figure]>img{width:100%;height:100%}vamtiger-cover-figure [slot=caption] [data-icon],vamtiger-cover-figure [slot=vamtiger-cover-figure]>img{width:100%;max-height:100%}vamtiger-cover-figure [slot=vamtiger-cover-figure]>img{display:inline-block;-o-object-fit:cover;object-fit:cover;z-index:0}vamtiger-cover-figure [data-overlay]{z-index:1}vamtiger-cover-figure [slot=template]{z-index:2}vamtiger-cover-figure [slot=caption]{z-index:3;position:absolute;left:0;bottom:0;display:grid;grid-template-areas:\"a b\" \"a c\";grid-column-gap:.5em;grid-row-gap:.2em;padding:0 0 10px 10px;color:#fff;letter-spacing:.04em}vamtiger-cover-figure [slot=center-caption]{z-index:4;display:grid;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;color:#fff;font-size:2em}vamtiger-cover-figure[data-center-caption-uppercase] [slot=center-caption]{text-transform:uppercase}vamtiger-cover-figure[data-center-caption-uppercase][data-center-caption-hashtag] [slot=center-caption] [data-caption-text]:before{content:\"#\"}vamtiger-cover-figure [slot=caption] [data-icon-figure]{grid-area:a;display:grid}vamtiger-cover-figure [slot=caption] [data-icon]{height:45px;width:45px}vamtiger-cover-figure [slot=caption] [data-title]{grid-area:b;font-size:1.1em}vamtiger-cover-figure [slot=caption] [data-subtitle]{grid-area:c;font-size:.8em}vamtiger-cover-figure [slot=caption] [data-subtitle],vamtiger-cover-figure [slot=caption] [data-title],vamtiger-cover-figure [slot=center-caption]{text-shadow:2px 2px 2px #000}vamtiger-cover-figure[data-loaded] [slot=dark-overlay]:first-of-type{background:-webkit-gradient(linear,left top,left bottom,color-stop(5%,rgba(0,0,0,.5)),color-stop(40%,rgba(0,0,0,.2)),color-stop(60%,transparent),to(transparent));background:linear-gradient(180deg,rgba(0,0,0,.5) 5%,rgba(0,0,0,.2) 40%,transparent 60%,transparent)}vamtiger-cover-figure[data-loaded] [slot=dark-overlay]:last-of-type{background:-webkit-gradient(linear,left top,left bottom,color-stop(5%,transparent),color-stop(40%,transparent),color-stop(60%,rgba(0,0,0,.2)),to(rgba(0,0,0,.5)));background:linear-gradient(180deg,transparent 5%,transparent 40%,rgba(0,0,0,.2) 60%,rgba(0,0,0,.5))}vamtiger-cover-figure [data-overlay]:first-of-type{-webkit-animation:a 275ms linear forwards,e 275ms forwards;animation:a 275ms linear forwards,e 275ms forwards}vamtiger-cover-figure [data-overlay]:last-of-type{-webkit-animation:a 275ms linear forwards,f 275ms forwards;animation:a 275ms linear forwards,f 275ms forwards}vamtiger-cover-figure[data-hide-overlay] [data-overlay]:first-of-type{-webkit-animation:b 275ms linear forwards,c 275ms forwards;animation:b 275ms linear forwards,c 275ms forwards}vamtiger-cover-figure[data-hide-overlay] [data-overlay]:last-of-type{-webkit-animation:b 275ms linear forwards,d 275ms forwards;animation:b 275ms linear forwards,d 275ms forwards}@element vamtiger-cover-figure and (max-width:500px){:self [slot=caption]{padding-left:5px;letter-spacing:.02em}:self [slot=caption] [data-subtitle],:self [slot=caption] [data-title-header]{position:relative;left:-5px}:self [slot=caption] [data-title]{font-size:.9em}:self [slot=caption] [data-subtitle]{font-size:.6em}:self [slot=center-caption]{font-size:1.3em}}@element vamtiger-cover-figure and (max-height:300px){:self [slot=caption]{padding-left:5px;letter-spacing:.02em}:self [slot=caption] [data-subtitle],:self [slot=caption] [data-title-header]{position:relative;left:-5px}:self [slot=caption] [data-title]{font-size:.9em}:self [slot=caption] [data-subtitle]{font-size:.6em}}@-webkit-keyframes a{0%{opacity:0}to{opacity:1}}@keyframes a{0%{opacity:0}to{opacity:1}}@-webkit-keyframes b{0%{opacity:1}to{opacity:0}}@keyframes b{0%{opacity:1}to{opacity:0}}@-webkit-keyframes c{0%{top:0}to{top:-5em}}@keyframes c{0%{top:0}to{top:-5em}}@-webkit-keyframes d{0%{top:0}to{top:5em}}@keyframes d{0%{top:0}to{top:5em}}@-webkit-keyframes e{0%{top:-5em}to{top:0}}@keyframes e{0%{top:-5em}to{top:0}}@-webkit-keyframes f{0%{top:5em}to{top:0}}@keyframes f{0%{top:5em}to{top:0}}\n/*# sourceMappingURL=document-index.ts.map */`;","import {\n    IGetTemplate,\n    GetTemplate,\n    StringConstant,\n    AttributesKey\n} from './types';\nimport html from './html';\nimport css from './css';\n\nconst { nothing } = StringConstant;\nconst template = document.createElement('template');\nconst stylesheet = `<style>${css}</style>`\nconst templateHtml = [\n    stylesheet,\n    html\n].join(nothing);\n\ntemplate.innerHTML = templateHtml;\n\nexport default <P extends IGetTemplate>(params: P) => {\n    const {\n        selector,\n        attributes = {},\n        properties = {}\n    } = params;\n    const attributesKeys = Object.keys(attributes) as AttributesKey[]\n    const templateElement = template.content.querySelector(selector);\n    const currentTemplate = templateElement && templateElement.cloneNode(true) as GetTemplate<P>;\n\n    if (currentTemplate) {\n        Object.assign(currentTemplate, properties);\n\n        attributesKeys.forEach(key => attributes[key] && currentTemplate.setAttribute(key, attributes[key] || ''));\n    }\n\n    return currentTemplate;\n};","export default '<slot></slot><img><figure data-image-figure></figure><figcaption data-image-caption><figure data-icon-figure><img data-icon></figure><header data-title-header><h5 data-title></h5></header><span data-subtitle></span></figcaption><figcaption data-center-caption></figcaption><div></div>';","import {\n    StringConstant,\n    IDataset,\n    IHandleLoadedImage,\n    EventName\n} from './types';\nimport VamtigerCoverFigure, { name } from './element';\n\nconst { nothing } = StringConstant;\nconst eventParams = {\n    bubbles: true\n};\n\nexport default function handleLoadedImage({ currentTarget, element: currentElement }: Event & IHandleLoadedImage) {\n    const image = currentTarget as HTMLElement;\n    const element = currentElement || image.closest(name) as VamtigerCoverFigure;\n    const dataset = element.dataset as IDataset;\n    const imageLoadedEvent = new CustomEvent(\n        EventName.imageLoaded,\n        eventParams\n    );\n\n    image.removeEventListener('loaded', handleLoadedImage);\n\n    dataset.loaded = nothing;\n\n    element.dispatchEvent(imageLoadedEvent);\n}","import {\n    ILoadImage,\n    Selector,\n    IDataset,\n    StringConstant\n} from './types';\nimport { name } from './element';\nimport getTemplate from './get-template';\nimport handleLoaded from './handle-loaded-image';\n\nconst { nothing } = StringConstant;\n\nexport default async function ({ element }: ILoadImage) {\n    const dataset = element.dataset as IDataset;\n    const {\n        image: src,\n        description,\n        overlay: overlayPrefix,\n        imageCaptionTitle,\n        imageCaptionSubtitle\n    } = dataset;\n    const alt = imageCaptionTitle && imageCaptionSubtitle && `${imageCaptionTitle}: imageCaptionSubtitle`\n        || imageCaptionTitle\n        || description\n        || nothing;\n    const image = src && getTemplate({\n        selector: Selector.image,\n        properties: {\n            src,\n            alt\n        }\n    });\n    const imageFigure = image && getTemplate({\n        selector: Selector.figure,\n        attributes: {\n            slot: name\n        }\n    })\n    const overlays = overlayPrefix && [\n        getTemplate({\n            selector: Selector.overlay,\n            attributes: {\n                slot: `${overlayPrefix}-overlay`\n            }\n        }),\n        getTemplate({\n            selector: Selector.overlay,\n            attributes: {\n                slot: `${overlayPrefix}-overlay`\n            }\n        })\n    ];\n\n    if (image && imageFigure) {\n        image.addEventListener('load', handleLoaded);\n\n        imageFigure.appendChild(image);\n\n        element.appendChild(imageFigure);\n    }\n\n    overlays && overlays.forEach(overlay => {\n        if (overlay) {\n            overlay.dataset.overlay = nothing;\n\n            element.appendChild(overlay);\n        }\n    });\n}","import {\n    ILoadImageCaption,\n    IDataset,\n    DataAttribute,\n    Selector,\n    StringConstant,\n    SlotName,\n    imageCaptionAttribute\n} from './types';\nimport getTemplate from './get-template';\nimport handleLoadedImage from './handle-loaded-image';\n\n\nconst { nothing } = StringConstant;\n\nexport default async function ({ element }: ILoadImageCaption) {\n    const dataset = element.dataset as IDataset;\n    const {\n        imageCaptionIcon,\n        imageCaptionTitle,\n        imageCaptionSubtitle,\n        centerCaption: currentCenterCaption = nothing\n    } = dataset;\n    const getCaption = imageCaptionAttribute.some(attribute => dataset.hasOwnProperty(attribute));\n    const getCenterCaption = currentCenterCaption ? true : false;\n    const alt = imageCaptionTitle && imageCaptionSubtitle && `${imageCaptionTitle}: imageCaptionSubtitle`\n        || imageCaptionTitle\n        || nothing;\n    const caption = getCaption && getTemplate({\n        selector: Selector.imageCaption,\n        attributes: {\n            slot: SlotName.caption\n        }\n    });\n    const centerCaption = getCenterCaption && getTemplate({\n        selector: Selector.centerCaption,\n        properties: {\n            innerHTML: `<span data-caption-text>${currentCenterCaption}</span>`\n        },\n        attributes: {\n            slot: SlotName.centerCaption\n        }\n    })\n    const icon = caption && caption.querySelector<HTMLImageElement>(Selector.icon);\n    const title = caption && caption.querySelector<HTMLHeadingElement>(Selector.title);\n    const subtitle = caption && caption.querySelector<HTMLSpanElement>(Selector.subtitle);\n    const captions = [\n        {\n            element: title,\n            innerHTML: imageCaptionTitle\n        },\n        {\n            element: subtitle,\n            innerHTML: imageCaptionSubtitle\n        }\n    ];\n\n    if (icon) {\n        if (imageCaptionIcon) {\n            if (caption) {\n                icon.addEventListener('load', event => handleLoadedImage(Object.assign(\n                    event,\n                    {\n                        element: caption\n                    }\n                )));\n\n                caption.dataset[DataAttribute.captionImage] = nothing;\n            }\n\n            icon.src = imageCaptionIcon;\n        }\n\n        if (alt) {\n            icon.alt = alt;\n        }\n    }\n\n    captions.forEach(({element, innerHTML}) => element && innerHTML && Object.assign(element, { innerHTML }));\n\n    caption && element.appendChild(caption);\n\n    centerCaption && element.appendChild(centerCaption);\n}","import loadScript from '../node_modules/vamtiger-browser-method/source/load-script';\nimport {\n    Selector,\n    ObservedAttribute,\n    SlotName\n} from './types';\nimport {\n    shadowRoot as shadowRootConfig,\n    observedAttributes\n} from './config';\nimport css from './css/document-index';\nimport getTemplate from './get-template';\nimport loadImage from './load-image';\nimport loadImageCaption from './load-image-caption'\n\nexport const name = 'vamtiger-cover-figure';\n\ncss && loadScript({ name, css })\n    .catch(console.error);\n\nexport default class VamtigerCoverFigure extends HTMLElement {\n    constructor() {\n        super();\n\n        const { dataset } = this;\n        const {\n            overlay: overlaySlotNamePrefix,\n            template\n        } = dataset;\n        const shadowRoot = this.attachShadow(shadowRootConfig);\n        const stylesheet = getTemplate({\n            selector: Selector.style\n        });\n        const slot = getTemplate({\n            selector: Selector.slot,\n            properties: {\n                name\n            }\n        });\n        const overlaySlot = overlaySlotNamePrefix && getTemplate({\n            selector: Selector.slot,\n            properties: {\n                name: `${overlaySlotNamePrefix}-overlay`\n            }\n        });\n        const templateSlot = template && getTemplate({\n            selector: Selector.slot,\n            properties: {\n                name: SlotName.template\n            }\n        });\n        const captionSlot = getTemplate({\n            selector: Selector.slot,\n            properties: {\n                name: SlotName.caption\n            }\n        });\n        const centerCaptionSlot = getTemplate({\n            selector: Selector.slot,\n            properties: {\n                name: SlotName.centerCaption\n            }\n        });\n        const elements = [\n            stylesheet,\n            slot,\n            overlaySlot,\n            templateSlot,\n            captionSlot,\n            centerCaptionSlot\n        ];\n\n        elements.forEach(element => element && shadowRoot.appendChild(element));\n    }\n\n    static get observedAttributes() {\n        return observedAttributes;\n    }\n\n    async connectedCallback() {\n        const element = this;\n\n        await loadImage({ element });\n\n        await loadImageCaption({ element });\n    }\n\n    attributeChangedCallback(name: ObservedAttribute, oldValue: string, newValue: string) {\n\n    }\n}","import defineCustomElement from '../node_modules/vamtiger-browser-method/source/define-custom-element';\nimport constructor, { name } from './element';\n\ndefineCustomElement({\n    name,\n    constructor\n});"],"names":["ScriptType","ScriptAttribute","ErrorMessage","StringConstant","TagName","LinkRel","LoadScriptElement","Selector","unsupportedFeature","customElementAreadyDefined","failedToLoadScript","stylesheet","script","scriptElement","link","style","DataAttribute","SlotName","EventName","ObservedAttributes","imageCaptionAttribute","imageCaptionIcon","imageCaptionTitle","imageCaptionSubtitle","shadowRoot","mode","observedAttributes","Object","keys","nothing","template","document","createElement","templateHtml","join","innerHTML","params","selector","attributes","properties","attributesKeys","templateElement","content","querySelector","currentTemplate","cloneNode","assign","forEach","key","setAttribute","eventParams","bubbles","handleLoadedImage","currentTarget","element","currentElement","image","closest","name","dataset","imageLoadedEvent","CustomEvent","imageLoaded","removeEventListener","loaded","dispatchEvent","Promise","resolve","reject","head","body","js","scriptName","jsonld","src","css","stylesheetName","href","remoteScript","hasOwnProperty","existingScript","HTMLScriptElement","type","HTMLLinkElement","rel","HTMLStyleElement","appendChild","addEventListener","handleLoad","event","handleLoadError","console","error","Error","loadScript","catch","defineCustomElement","constructor","ignore","customElements","window","define","existingElement","get","HTMLElement","[object Object]","super","this","overlay","overlaySlotNamePrefix","attachShadow","shadowRootConfig","getTemplate","slot","caption","centerCaption","description","overlayPrefix","alt","imageFigure","figure","overlays","handleLoaded","loadImage","currentCenterCaption","getCaption","some","attribute","getCenterCaption","imageCaption","icon","captions","title","subtitle","captionImage","loadImageCaption","oldValue","newValue"],"mappings":"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"}