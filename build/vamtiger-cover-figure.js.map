{"version":3,"file":"vamtiger-cover-figure.js","sources":["../source/types.ts","../source/config.ts","../source/css/document-index.ts","../source/html/index.ts","../source/get-template.ts","../source/load-image-caption.ts","../source/handle-loaded-image.ts","../source/set-microdata.ts","../source/load-image.ts","../source/element.ts","../source/vamtiger-cover-figure.ts"],"sourcesContent":["import * as VBM from 'vamtiger-browser-method/build/types';\nimport VamtigerCoverFigure from './element';\n\nexport enum StringConstant {\n    nothing = '',\n    colonSpace = ': ',\n    slash = '/'\n}\n\nexport enum TimeoutDuration {\n    captionLoaded = 1000\n}\n\nexport enum DataAttribute {\n    captionImage = 'captionImage',\n    imageCaptionIcon = 'imageCaptionIcon',\n    imageCaptionTitle = 'imageCaptionTitle',\n    imageCaptionSubtitle = 'imageCaptionSubtitle',\n    jsonLd = 'jsonLd'\n}\n\nexport enum Selector {\n    style = 'style',\n    slot = 'slot',\n    image = 'img',\n    overlay = 'div',\n    figure = 'figure',\n    imageCaption = '[data-image-caption]',\n    icon = '[data-icon]',\n    titleHeader = '[data-title-header]',\n    title = '[data-title]',\n    subtitle = '[data-subtitle]',\n    centerCaption = '[data-center-caption]',\n    captionImage = 'img, svg',\n    vamtigerResponsiveSvg = 'vamtiger-responsive-svg',\n    iconFigure = '[data-icon-figure]',\n    linkedDataCaption = '[data-linked-data-caption]',\n    linkedDataCaptionElement = '[data-linked-data-caption-element]',\n    a = 'a'\n}\n\nexport enum DataAttribute {\n    image = 'image',\n    description = 'description',\n    loaded = 'loaded',\n    overlay = 'overlay'\n}\n\nexport enum SlotName {\n    darkOverlay = 'dark-overlay',\n    template = 'template',\n    caption = 'caption',\n    centerCaption = 'center-caption'\n}\n\nexport enum EventName {\n    imageLoaded = 'imageLoaded',\n    svgLoaded = 'svgLoaded'\n}\n\nexport enum ObservedAttributes {\n\n}\n\nexport interface IGetTemplate {\n    selector: Selector;\n    attributes?: IAttributes;\n    properties?: IProperties;\n}\n\nexport interface IAnyObject {\n    [key: string]: any;\n}\n\nexport interface IAttributes {\n    id?: string;\n    for?: string;\n    slot?: string;\n    'data-image-figure'?: string;\n    'data-json-ld'?: string;\n    itemprop?: string;\n}\n\nexport interface IProperties {\n    name?: string;\n    src?: string;\n    alt?: string;\n    innerHTML?: string;\n}\n\nexport interface ILoadImage {\n    element: VamtigerCoverFigure;\n}\n\nexport interface ILoadImageCaption {\n    element: VamtigerCoverFigure;\n}\n\nexport interface IDataset extends DOMStringMap {\n    image: string;\n    description?: string;\n    loaded?: '';\n    overlay?: SlotName;\n    imageCaptionIcon?: string;\n    imageCaptionTitle?: string;\n    imageCaptionSubtitle?: string;\n    centerCaption?: string;\n}\n\nexport interface IMicrodata {\n    itemscope: string;\n    itemtype: string;\n}\n\nexport interface IHandleLoadedImage {\n    element?: HTMLElement;\n}\n\nexport interface ISetMicrodata {\n    element: HTMLElement;\n}\n\nexport type MicroDataAttribute = keyof IMicrodata;\n\nexport type AttributesKey = keyof IAttributes;\n\nexport type ObservedAttribute = keyof typeof ObservedAttributes;\n\nexport type GetTemplate<P extends IGetTemplate> =\n    P['selector'] extends Selector.style ? HTMLStyleElement :\n    P['selector'] extends Selector.slot ? HTMLSlotElement :\n    P['selector'] extends Selector.image ? HTMLImageElement :\n    P['selector'] extends Selector.overlay ? HTMLDivElement :\n    P['selector'] extends Selector.a ? HTMLAnchorElement :\n    P['selector'] extends Selector.subtitle\n        | Selector.linkedDataCaptionElement ? HTMLSpanElement :\n    P['selector'] extends Selector.figure\n        | Selector.imageCaption\n        | Selector.titleHeader\n        | Selector.vamtigerResponsiveSvg\n        | Selector.iconFigure\n        | Selector.linkedDataCaption\n        | Selector.centerCaption ? HTMLElement :\n    null;\n\nexport const imageCaptionAttribute = [\n    DataAttribute.imageCaptionIcon,\n    DataAttribute.imageCaptionTitle,\n    DataAttribute.imageCaptionSubtitle\n];","import {\n    ObservedAttributes,\n    ObservedAttribute\n} from './types'\n\nexport const shadowRoot = {\n    mode: 'open'\n} as ShadowRootInit;\n\nexport const observedAttributes = Object.keys(ObservedAttributes) as ObservedAttribute[];\n\nexport const dependencies = [\n    'https://vamtiger-project.github.io/vamtiger-response-svg/build/vamtiger-responsive-svg.js.json.js'\n];","export default `vamtiger-cover-figure,vamtiger-cover-figure figcaption,vamtiger-cover-figure figure,vamtiger-cover-figure h5,vamtiger-cover-figure header{margin:0;padding:0}vamtiger-cover-figure:before{bottom:0;right:0}vamtiger-cover-figure [data-overlay],vamtiger-cover-figure [slot=caption],vamtiger-cover-figure [slot=caption] [data-icon-figure],vamtiger-cover-figure [slot=vamtiger-cover-figure]{position:relative}vamtiger-cover-figure[data-center-caption-uppercase][data-center-caption-hashtag] [slot=center-caption] [data-caption-text]:before,vamtiger-cover-figure [slot=center-caption] [data-caption-text],vamtiger-cover-figure figcaption,vamtiger-cover-figure figure{display:inline-block}vamtiger-cover-figure [slot=caption][data-image-caption],vamtiger-cover-figure [slot=dark-overlay],vamtiger-cover-figure [slot=vamtiger-cover-figure]{-webkit-animation:b 0ms linear forwards;animation:b 0ms linear forwards}vamtiger-cover-figure [slot=dark-overlay],vamtiger-cover-figure [slot=vamtiger-cover-figure]{visibility:hidden}vamtiger-cover-figure[data-loaded] [slot=dark-overlay],vamtiger-cover-figure[data-loaded] [slot=vamtiger-cover-figure]{visibility:visible;-webkit-animation:a 275ms linear forwards;animation:a 275ms linear forwards}vamtiger-cover-figure[data-loaded] [slot=caption]{visibility:hidden}vamtiger-cover-figure[data-loaded] [slot=caption][data-image-caption][data-loaded]{visibility:visible;-webkit-animation:a 275ms linear forwards,h 175ms linear forwards;animation:a 275ms linear forwards,h 175ms linear forwards}vamtiger-cover-figure [data-overlay],vamtiger-cover-figure [slot=center-caption],vamtiger-cover-figure [slot=template],vamtiger-cover-figure [slot=vamtiger-cover-figure]{grid-column:1;grid-row:1}vamtiger-cover-figure [data-overlay],vamtiger-cover-figure [slot=template],vamtiger-cover-figure [slot=vamtiger-cover-figure],vamtiger-cover-figure [slot=vamtiger-cover-figure]>img{width:100%;height:100%}vamtiger-cover-figure [slot=caption] [data-icon],vamtiger-cover-figure [slot=vamtiger-cover-figure]>img{width:100%;max-height:100%}vamtiger-cover-figure [slot=vamtiger-cover-figure]>img{display:inline-block;-o-object-fit:cover;object-fit:cover;z-index:0}vamtiger-cover-figure [data-overlay]{z-index:1}vamtiger-cover-figure [slot=template]{z-index:2}vamtiger-cover-figure [slot=caption]{z-index:3;position:absolute;left:0;bottom:0;display:grid;grid-template-areas:\"a b\" \"a c\";grid-column-gap:.7em;grid-row-gap:.2em;padding:0 0 10px 10px;color:#fff;letter-spacing:.04em}vamtiger-cover-figure [slot=center-caption]{z-index:4;display:grid;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;color:#fff;font-size:2em}vamtiger-cover-figure[data-center-caption-uppercase] [slot=center-caption]{text-transform:uppercase}vamtiger-cover-figure[data-center-caption-uppercase][data-center-caption-hashtag] [slot=center-caption] [data-caption-text]:before{content:\"#\"}vamtiger-cover-figure [slot=caption] [data-icon-figure]{grid-area:a;display:grid;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center}vamtiger-cover-figure [slot=caption] [data-icon]{height:50px;width:50px}vamtiger-cover-figure [slot=caption] [data-title]{grid-area:b;font-size:1.2em}vamtiger-cover-figure [slot=caption] [data-subtitle]{grid-area:c;font-size:.9em}vamtiger-cover-figure [slot=caption] [data-subtitle],vamtiger-cover-figure [slot=caption] [data-title],vamtiger-cover-figure [slot=center-caption]{text-shadow:2px 2px 2px #000}vamtiger-cover-figure[data-loaded] [slot=dark-overlay]:first-of-type{background:-webkit-gradient(linear,left top,left bottom,color-stop(5%,rgba(0,0,0,.7)),color-stop(40%,rgba(0,0,0,.3)),color-stop(60%,transparent),to(transparent));background:linear-gradient(180deg,rgba(0,0,0,.7) 5%,rgba(0,0,0,.3) 40%,transparent 60%,transparent)}vamtiger-cover-figure[data-loaded] [slot=dark-overlay]:last-of-type{background:-webkit-gradient(linear,left top,left bottom,color-stop(5%,transparent),color-stop(40%,transparent),color-stop(60%,rgba(0,0,0,.3)),to(rgba(0,0,0,.7)));background:linear-gradient(180deg,transparent 5%,transparent 40%,rgba(0,0,0,.3) 60%,rgba(0,0,0,.7))}vamtiger-cover-figure:before{display:inline-block;content:\"\";opacity:0;-webkit-transition:opacity 335ms linear;transition:opacity 335ms linear;position:absolute;left:0;top:0;width:100%;height:100%}vamtiger-cover-figure[data-loading]:before{opacity:1;-webkit-animation:g 675ms linear alternate infinite;animation:g 675ms linear alternate infinite}vamtiger-cover-figure[data-loaded]:before{display:none}vamtiger-cover-figure [data-overlay]:first-of-type{-webkit-animation:a 275ms linear forwards,e 275ms forwards;animation:a 275ms linear forwards,e 275ms forwards}vamtiger-cover-figure [data-overlay]:last-of-type{-webkit-animation:a 275ms linear forwards,f 275ms forwards;animation:a 275ms linear forwards,f 275ms forwards}vamtiger-cover-figure[data-hide-overlay] [data-overlay]:first-of-type{-webkit-animation:b 275ms linear forwards,c 275ms forwards;animation:b 275ms linear forwards,c 275ms forwards}vamtiger-cover-figure[data-hide-overlay] [data-overlay]:last-of-type{-webkit-animation:b 275ms linear forwards,d 275ms forwards;animation:b 275ms linear forwards,d 275ms forwards}@element vamtiger-cover-figure and (max-width:600px){:self [slot=caption]{grid-row-gap:0;grid-column-gap:.5em}:self [slot=caption] [data-icon]{height:45px;width:45px}:self [slot=caption] [data-title]{font-size:1em}:self [slot=caption] [data-subtitle]{font-size:.8em}}@element vamtiger-cover-figure and (max-width:500px){:self [slot=caption]{padding:0 0 8px 8px;grid-row-gap:0;grid-column-gap:.3em}:self [slot=caption] [data-icon]{height:40px;width:40px}:self [slot=caption] [data-title]{font-size:.9em}:self [slot=caption] [data-subtitle]{font-size:.8em}}@element vamtiger-cover-figure and (max-width:400px){:self [slot=caption]{padding:0 0 5px 5px;grid-row-gap:0;grid-column-gap:.2em}:self [slot=caption] [data-icon]{height:35px;width:35px}:self [slot=caption] [data-title]{font-size:.8em}:self [slot=caption] [data-subtitle]{font-size:.7em}}@element vamtiger-cover-figure and (max-width:350px){:self [slot=caption]{padding:0 0 5px 5px}:self [slot=caption] [data-icon]{display:none}:self [slot=caption] [data-title]{font-size:.8em}:self [slot=caption] [data-subtitle]{font-size:.7em}}@-webkit-keyframes a{0%{opacity:0}to{opacity:1}}@keyframes a{0%{opacity:0}to{opacity:1}}@-webkit-keyframes b{0%{opacity:1}to{opacity:0}}@keyframes b{0%{opacity:1}to{opacity:0}}@-webkit-keyframes c{0%{top:0}to{top:-5em}}@keyframes c{0%{top:0}to{top:-5em}}@-webkit-keyframes d{0%{top:0}to{top:5em}}@keyframes d{0%{top:0}to{top:5em}}@-webkit-keyframes e{0%{top:-5em}to{top:0}}@keyframes e{0%{top:-5em}to{top:0}}@-webkit-keyframes f{0%{top:5em}to{top:0}}@keyframes f{0%{top:5em}to{top:0}}@-webkit-keyframes g{0%{background-color:#f1f1f1}to{background-color:#e7e7e7}}@keyframes g{0%{background-color:#f1f1f1}to{background-color:#e7e7e7}}@-webkit-keyframes h{0%{left:-2em}to{left:0}}@keyframes h{0%{left:-2em}to{left:0}}\n/*# sourceMappingURL=document-index.ts.map */`;","export default `<slot></slot> <img> <figure data-image-figure></figure> <figcaption data-image-caption></figcaption> <figure data-icon-figure></figure> <vamtiger-responsive-svg data-icon></vamtiger-responsive-svg> <header data-title-header> <h5 data-title></h5> </header> <span data-subtitle></span> <figcaption data-center-caption></figcaption> <div></div> <figcaption data-linked-data-caption></figcaption> <span data-linked-data-caption-element></span> <a></a>`;","import {\n    IGetTemplate,\n    GetTemplate,\n    StringConstant,\n    AttributesKey\n} from './types';\nimport html from './html';\nimport css from './css';\n\nconst { nothing } = StringConstant;\nconst template = document.createElement('template');\nconst stylesheet = `<style>${css}</style>`\nconst templateHtml = [\n    stylesheet,\n    html\n].join(nothing);\n\ntemplate.innerHTML = templateHtml;\n\nexport default <P extends IGetTemplate>(params: P) => {\n    const {\n        selector,\n        attributes = {},\n        properties = {}\n    } = params;\n    const attributesKeys = Object.keys(attributes) as AttributesKey[]\n    const templateElement = template.content.querySelector(selector);\n    const currentTemplate = templateElement && templateElement.cloneNode(true) as GetTemplate<P>;\n\n    if (currentTemplate) {\n        Object.assign(currentTemplate, properties);\n\n        attributesKeys.forEach(key => attributes[key] && currentTemplate.setAttribute(key, attributes[key] || ''));\n    }\n\n    return currentTemplate;\n};","import {\n    ILoadImageCaption,\n    IDataset,\n    Selector,\n    SlotName,\n    EventName,\n    StringConstant,\n    TimeoutDuration\n} from './types';\nimport getTemplate from './get-template';\n\nconst { VamtigerBrowserMethod } = window;\nconst { getData } = VamtigerBrowserMethod;\nconst { nothing } = StringConstant;\nconst { captionLoaded: timeout } = TimeoutDuration\n\nexport default async function ({ element }: ILoadImageCaption) {\n    const dataset = element.dataset as IDataset;\n    const {\n        jsonLd: jsonLdUrl\n    } = dataset;\n    const { jsonLd, json } = jsonLdUrl && await getData({ jsonLd: jsonLdUrl }) || { jsonLd: [], json: {} };\n    const [ captionJsonLd ] = jsonLd;\n    const svgCaptionUrl = json && json.svgCaption;\n    const titleText = captionJsonLd && captionJsonLd.name;\n    const subtitleText = captionJsonLd && captionJsonLd.description;\n    const responsiveSvg = titleText && subtitleText && svgCaptionUrl && getTemplate({\n        selector: Selector.vamtigerResponsiveSvg,\n        attributes: {\n            'data-json-ld': svgCaptionUrl\n        }\n    });\n    const iconFigure =  responsiveSvg && getTemplate({\n        selector: Selector.iconFigure\n    });\n    const titleHeader = titleText && getTemplate({\n        selector: Selector.titleHeader,\n        attributes: {\n            'data-json-ld': svgCaptionUrl\n        }\n    });\n    const title = titleHeader && titleHeader.querySelector<HTMLHeadingElement>(Selector.title);\n    const subtitle = subtitleText && getTemplate({\n        selector: Selector.subtitle,\n        properties: {\n            innerHTML: subtitleText\n        }\n    });\n    const captionElements = [\n        iconFigure,\n        titleHeader,\n        subtitle\n    ];\n    const caption = captionElements.every(captionElement => Boolean(captionElement)) && getTemplate({\n        selector: Selector.imageCaption,\n        attributes: {\n            slot: SlotName.caption\n        }\n    });\n\n    if (responsiveSvg && iconFigure) {\n        responsiveSvg.addEventListener(EventName.svgLoaded, handleSvgLoaded);\n\n        iconFigure.appendChild(responsiveSvg);\n    }\n\n    if (title && titleText) {\n        title.innerHTML = titleText;\n    }\n\n    titleHeader && titleHeader.setAttribute('itemprop', 'name');\n\n    subtitle && subtitle.setAttribute('itemprop', 'description');\n\n    if (caption) {\n        captionElements.forEach(captionElement => captionElement && caption.appendChild(captionElement));\n\n        element.appendChild(caption);\n    }\n\n    function handleSvgLoaded() {\n        responsiveSvg && responsiveSvg.removeEventListener(EventName.svgLoaded, handleSvgLoaded);\n\n        caption && setTimeout(() => caption.dataset.loaded = nothing, timeout);\n    }\n}","import {\n    StringConstant,\n    IDataset,\n    IHandleLoadedImage,\n    EventName\n} from './types';\nimport VamtigerCoverFigure, { name } from './element';\nimport loadImageCaption from './load-image-caption'\n\nconst { nothing } = StringConstant;\nconst eventParams = {\n    bubbles: true\n};\n\nexport default function handleLoadedImage({ currentTarget, element: currentElement }: Event & IHandleLoadedImage) {\n    const image = currentTarget as HTMLElement;\n    const element = (currentElement || image.closest(name)) as VamtigerCoverFigure;\n    const dataset = element.dataset as IDataset;\n    const imageLoadedEvent = new CustomEvent(\n        EventName.imageLoaded,\n        eventParams\n    );\n\n    image.removeEventListener('loaded', handleLoadedImage);\n\n    dataset.loaded = nothing;\n\n    delete element.dataset.loading;\n\n    element.dispatchEvent(imageLoadedEvent);\n\n    loadImageCaption({ element });\n}","import {\n    ISetMicrodata,\n    IDataset,\n    Selector,\n    StringConstant\n} from './types';\nimport getTemplate from './get-template';\n\nconst { VamtigerBrowserMethod, requestIdleCallback } = self;\nconst { getData, getMicrodataCaption } = VamtigerBrowserMethod;\nconst { slash, nothing } = StringConstant;\n\nexport default function(params: ISetMicrodata) {return new Promise((resolve, reject) => {\n    if (requestIdleCallback) {\n        requestIdleCallback(() => setMicroData(params).then(resolve).catch(reject));\n    } else {\n        setMicroData(params).then(resolve).catch(reject)\n    }\n})}\n\nasync function setMicroData({ element }: ISetMicrodata) {\n    const dataset = element.dataset as IDataset;\n    const {\n        jsonLd: jsonLdUrl\n    } = dataset;\n    const { jsonLd } = jsonLdUrl && await getData({ jsonLd: jsonLdUrl }) || { jsonLd: [] };\n    const [ imageData ] = jsonLd;\n    const name = imageData && imageData.name;\n    const description = imageData && imageData.description;\n    const keywords = imageData && imageData.keywords;\n    const about = imageData && imageData.about;\n    const aboutItemType = about['@context'] && about['@type'] && [\n        about['@context'],\n        about['@type']\n    ].join(slash);\n    const aboutName = about && about.name;\n    const aboutDescription = about && about.description;\n    const caption = imageData && getTemplate({\n        selector: Selector.linkedDataCaption\n    });\n    const aboutCaption = about && getTemplate({\n        selector: Selector.linkedDataCaption,\n        attributes: {\n            itemprop: 'about'\n        }\n    });\n    const captionElements = caption && [\n        name && getTemplate({\n            selector: Selector.linkedDataCaptionElement,\n            properties: {\n                innerHTML: name\n            },\n            attributes: {\n                itemprop: 'name'\n            }\n        }),\n        description && getTemplate({\n            selector: Selector.linkedDataCaptionElement,\n            properties: {\n                innerHTML: description\n            },\n            attributes: {\n                itemprop: 'description'\n            }\n        }),\n        keywords && getTemplate({\n            selector: Selector.linkedDataCaptionElement,\n            properties: {\n                innerHTML: keywords\n            },\n            attributes: {\n                itemprop: 'keywords'\n            }\n        }),\n        imageData && getMicrodataCaption({\n            imageData,\n            fieldKey: 'about'\n        }),\n        imageData && getMicrodataCaption({\n            imageData,\n            fieldKey: 'producer'\n        }),\n        imageData && getMicrodataCaption({\n            imageData,\n            fieldKey: 'creator'\n        }),\n        imageData && getMicrodataCaption({\n            imageData,\n            fieldKey: 'sponsor'\n        }),\n        imageData && getMicrodataCaption({\n            imageData,\n            fieldKey: 'funder'\n        })\n    ].filter(currentElement => currentElement);\n\n    if (caption && captionElements && captionElements.length) {\n        captionElements.forEach(currentElement => currentElement && caption.appendChild(currentElement));\n\n        element.appendChild(caption);\n    }\n}","import {\n    ILoadImage,\n    IDataset,\n    Selector,\n    StringConstant,\n    MicroDataAttribute\n} from './types';\nimport { name } from './element';\nimport getTemplate from './get-template';\nimport handleLoaded from './handle-loaded-image';\nimport setMicroData from './set-microdata';\n\nconst { VamtigerBrowserMethod } = window;\nconst { getData } = VamtigerBrowserMethod;\nconst { nothing, colonSpace, slash } = StringConstant;\n\nexport default async function ({ element }: ILoadImage) {\n    const dataset = element.dataset as IDataset;\n    const {\n        image: src,\n        overlay: overlayPrefix,\n        jsonLd: jsonLdUrl\n    } = dataset;\n    const { jsonLd } = jsonLdUrl && await getData({ jsonLd: jsonLdUrl }) || { jsonLd: [] };\n    const [ imageData ] = jsonLd;\n    const url = imageData && imageData.image || src;\n    const alt = imageData && [\n        imageData.name,\n        imageData.description\n    ].filter(text => text).join(colonSpace);\n    const itemtype = imageData['@context'] && imageData['@type'] && [\n        imageData['@context'],\n        imageData['@type']\n    ].join(slash);\n    const microData = itemtype && {\n        itemscope: nothing,\n        itemtype\n    };\n    const microDataAttributes = microData && Object.keys(microData) as MicroDataAttribute[] || [];\n    const image = url && getTemplate({\n        selector: Selector.image,\n        properties: {\n            src: url,\n            alt\n        }\n    });\n    const imageFigure = image && getTemplate({\n        selector: Selector.figure,\n        attributes: {\n            slot: name\n        }\n    })\n    const overlays = overlayPrefix && [\n        getTemplate({\n            selector: Selector.overlay,\n            attributes: {\n                slot: `${overlayPrefix}-overlay`\n            }\n        }),\n        getTemplate({\n            selector: Selector.overlay,\n            attributes: {\n                slot: `${overlayPrefix}-overlay`\n            }\n        })\n    ];\n\n    if (image && imageFigure) {\n        image.addEventListener('load', handleLoaded);\n\n        imageFigure.appendChild(image);\n\n        element.appendChild(imageFigure);\n\n        element.dataset.loading = nothing;\n\n        image.setAttribute('itemprop', 'image');\n    }\n\n    overlays && overlays.forEach(overlay => {\n        if (overlay) {\n            overlay.dataset.overlay = nothing;\n\n            element.appendChild(overlay);\n        }\n    });\n\n    microData && microDataAttributes.forEach(attribute => element.setAttribute(attribute, microData[attribute]));\n\n    setMicroData({ element });\n}","import {\n    Selector,\n    ObservedAttribute,\n    SlotName\n} from './types';\nimport {\n    shadowRoot as shadowRootConfig,\n    observedAttributes\n} from './config';\nimport css from './css/document-index';\nimport getTemplate from './get-template';\nimport loadImage from './load-image';\n\nexport const name = 'vamtiger-cover-figure';\n\nconst { VamtigerBrowserMethod } = window;\nconst { loadScript } = VamtigerBrowserMethod;\n\ncss && loadScript({ name, css })\n    .catch(console.error);\n\nexport default class VamtigerCoverFigure extends HTMLElement {\n    constructor() {\n        super();\n\n        const { dataset } = this;\n        const {\n            overlay: overlaySlotNamePrefix,\n            template\n        } = dataset;\n        const shadowRoot = this.attachShadow(shadowRootConfig);\n        const stylesheet = getTemplate({\n            selector: Selector.style\n        });\n        const slot = getTemplate({\n            selector: Selector.slot,\n            properties: {\n                name\n            }\n        });\n        const overlaySlot = overlaySlotNamePrefix && getTemplate({\n            selector: Selector.slot,\n            properties: {\n                name: `${overlaySlotNamePrefix}-overlay`\n            }\n        });\n        const templateSlot = template && getTemplate({\n            selector: Selector.slot,\n            properties: {\n                name: SlotName.template\n            }\n        });\n        const captionSlot = getTemplate({\n            selector: Selector.slot,\n            properties: {\n                name: SlotName.caption\n            }\n        });\n        const centerCaptionSlot = getTemplate({\n            selector: Selector.slot,\n            properties: {\n                name: SlotName.centerCaption\n            }\n        });\n        const elements = [\n            stylesheet,\n            slot,\n            overlaySlot,\n            templateSlot,\n            captionSlot,\n            centerCaptionSlot\n        ];\n\n        elements.forEach(element => element && shadowRoot.appendChild(element));\n    }\n\n    static get observedAttributes() {\n        return observedAttributes;\n    }\n\n    async connectedCallback() {\n        const element = this;\n\n        await loadImage({ element });\n    }\n\n    attributeChangedCallback(name: ObservedAttribute, oldValue: string, newValue: string) {\n\n    }\n}","import constructor, { name } from './element';\nimport {\n    dependencies\n} from './config'\n\nconst { VamtigerBrowserMethod } = window;\nconst { defineCustomElement, loadScript } = VamtigerBrowserMethod;\nconst params = {\n    name,\n    constructor\n};\n\nasync function load() {\n    await Promise.all(dependencies.map(src => loadScript({ src })));\n\n    defineCustomElement(params);\n}\n\nload().catch(console.warn);"],"names":["StringConstant","TimeoutDuration","DataAttribute","Selector","SlotName","EventName","ObservedAttributes","imageCaptionIcon","imageCaptionTitle","imageCaptionSubtitle","shadowRoot","mode","observedAttributes","Object","keys","dependencies","nothing","template","document","createElement","templateHtml","html","join","innerHTML","params","selector","attributes","properties","attributesKeys","templateElement","content","querySelector","currentTemplate","cloneNode","assign","forEach","key","setAttribute","VamtigerBrowserMethod","window","getData","captionLoaded","timeout","eventParams","bubbles","handleLoadedImage","currentTarget","element","currentElement","image","closest","name","dataset","imageLoadedEvent","CustomEvent","imageLoaded","removeEventListener","loaded","loading","dispatchEvent","jsonLd","jsonLdUrl","json","captionJsonLd","svgCaptionUrl","svgCaption","titleText","subtitleText","description","responsiveSvg","getTemplate","vamtigerResponsiveSvg","data-json-ld","iconFigure","titleHeader","title","subtitle","captionElements","caption","every","captionElement","Boolean","imageCaption","slot","addEventListener","svgLoaded","handleSvgLoaded","setTimeout","appendChild","loadImageCaption","requestIdleCallback","self","getMicrodataCaption","slash","setMicroData","imageData","keywords","about","linkedDataCaption","itemprop","linkedDataCaptionElement","fieldKey","filter","length","colonSpace","src","overlay","overlayPrefix","url","alt","text","itemtype","microData","itemscope","microDataAttributes","imageFigure","figure","overlays","handleLoaded","attribute","Promise","resolve","reject","then","catch","loadScript","css","console","error","defineCustomElement","HTMLElement","[object Object]","super","this","overlaySlotNamePrefix","attachShadow","shadowRootConfig","style","centerCaption","loadImage","oldValue","newValue","all","map","load","warn"],"mappings":"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"}